- name: Make directory
  file:
    path: "{{ jobdir }}"
    state: directory
    owner: "{{ ansible_user }}"
    mode: 0755
- name: Download source code
  get_url:
    dest: "{{ jobdir }}/mpi_nxnlatbw.c"
    url: https://raw.githubusercontent.com/stackhpc/hpc-tests/master/apps/nxnlatbw/src/mpi_nxnlatbw.c
- name: Compile
  shell: . /etc/profile && module load gnu9 openmpi4 && mpicc -o nxnlatbw *.c
  args:
    executable: /usr/bin/bash
    chdir: "{{ jobdir }}"
    creates: nxnlatbw
- name: Create sbatch script
  copy:
    dest: "{{ jobdir }}/pingmatrix.sh"
    content: |
      #!/usr/bin/bash

      #SBATCH --ntasks={{ computes.stdout_lines | length }}
      #SBATCH --ntasks-per-node=1
      #SBATCH --output=%x.out
      #SBATCH --error=%x.out
      #SBATCH --exclusive
      {%if openhpc_tests_nodes is defined %}#SBATCH --nodelist={{ openhpc_tests_nodes }}{% endif %}

      export UCX_NET_DEVICES={{ openhpc_tests_ucx_net_devices }}
      module load gnu9/9.3.0
      module load openmpi4/4.0.4

      srun --mpi=pmix_v3 nxnlatbw    
- name: Run ping matrix
  shell: sbatch --wait pingmatrix.sh
  become: no
  args:
    chdir: "{{ jobdir }}"
# nxnlatbw outputs ranks, not nodenames which would be more useful for finding issues. The sbatch manpage says nodes provided via --nodelist are sorted, but doesn't specify how.
# Some testing using a "helloworld" program showed it is NOT sorted the same as python's sorted(), it's lexicographical. So we use scontrol to guarantee the same sort order.
# Note this still doesn't fix any non-unique names but we should get a length mis-match at least with that.
# although this looks a bit crazy:
- name: Expand node list
  shell: "scontrol show hostnames {{ openhpc_tests_nodes if openhpc_tests_nodes is defined else (computes.stdout_lines | join(',')) }}"
  register: scontrol_hostnames
- name: Create sorted node expression
  shell: "scontrol show hostlistsorted {{ scontrol_hostnames.stdout_lines | join(',') }}"
  register: scontrol_hostlistsorted
- name: Expand node list again
  shell: "scontrol show hostnames {{ scontrol_hostlistsorted.stdout_lines | join(',') }}"
  register: slurm_names
- name: Process output
  plot_nxnlatbw:
    src: "{{ jobdir }}/pingmatrix.sh.out"
    dest: "{{ jobdir }}/pingmatrix.html"
    nodes: "{{ slurm_names.stdout_lines | join(',') }}"
  register: nxnlatbw
- name: Fetch html results table to ansible control host
  fetch:
    src: "{{ jobdir }}/pingmatrix.html"
    dest: /tmp/pingmatrix.html
    flat: yes
- name: Summarise results
  debug:
    msg: |
      Summary for pingmatrix (pairwise on {{ slurm_names.stdout_lines | length }} nodes):
      {{ nxnlatbw['stats'] | to_nice_yaml }}
      Tabular output on ansible control host at /tmp/pingmatrix.html
