- name: Add Intel packages
  include: intel.yml
  become: yes
- name: Make directory
  file:
    path: "{{ jobdir }}"
    state: directory
    owner: "{{ ansible_user }}"
- name: Get compute memory (in megabytes)
  command: "sinfo --noheader --Format Memory --node {{ computes.stdout_lines[0] }}" # first node
  register: free
- name: Calculate total memory target
  set_fact:
    mem_target: "{{ (free.stdout.strip() | int *  openhpc_tests_hpl_mem_frac) | int }}" # Intel don't tell you but the -b flag appears to be per node or process, not total!
- debug:
    msg: "Using 1 process per node targeting {{ mem_target }} MB ({{  openhpc_tests_hpl_mem_frac * 100 }}% of each node)"
- name: Get all nodes
  shell: "sinfo --Node --noheader --format %N" # TODO: assumes only one partition, although actually excluding nodes not in the default partition should be fine.
  register: all_nodes
- name: Calculate excluded nodes
  set_fact:
    excluded_nodes: "{{ all_nodes.stdout_lines | difference(computes.stdout_lines) }}"
- name: Create sbatch script
  copy:
    dest: "{{ jobdir }}/hpl-solo.sh"
    content: |
      #!/usr/bin/bash

      #SBATCH --ntasks=1
      #SBATCH --output=%x.%a.out
      #SBATCH --error=%x.%a.out
      #SBATCH --exclusive
      #SBATCH --array=0-{{ computes.stdout_lines | length - 1 }}
      {% if excluded_nodes | length > 0 %}
      #SBATCH --exclude={{ excluded_nodes | join(',') }}
      {% endif %}
      
      source  {{ openhpc_tests_intel_pkgs.impi.path }}/mpivars.sh
      source {{ openhpc_tests_intel_pkgs.mkl.path }}/mklvars.sh intel64
      export I_MPI_DEBUG=4 # puts Node name in output
      export UCX_NET_DEVICES={{ openhpc_tests_ucx_net_devices }}
      
      cp $MKLROOT/benchmarks/mp_linpack/HPL.dat .
      srun $MKLROOT/benchmarks/mp_linpack/xhpl_intel64_dynamic -m {{ mem_target }} -b {{ openhpc_tests_hpl_NB }} -p 1 -q 1

- name: Run hpl-solo
  shell: sbatch --wait hpl-solo.sh
  become: no
  register:
  args:
    chdir: "{{ jobdir }}"
- name: Check HPL completed OK
  tags: postpro
  shell: "grep '1 tests completed and passed residual checks' *.out"
  args:
    chdir: "{{ jobdir }}"
  changed_when: false
  register: passed
  failed_when: "passed.stdout_lines | length != computes.stdout_lines | length"
- name: Extract performance
  tags: postpro
  shell: "grep '^W[R|C]' *.out | tr -s ' ' | cut -d ' ' -f 7" # tr -s squeezes multiple spaces to single, then take gfops column
  args:
    chdir: "{{ jobdir }}"
  changed_when: false
  register: perf
- name: Summarise results
  tags: postpro
  debug:
    msg: |
      Summary for hpl-solo ({{ computes.stdout_lines | length }} nodes):
        Max:  {{ perf.stdout_lines | map('float') | max }} gflops
        Min:  {{ perf.stdout_lines | map('float') | min }} gflops
        Mean: {{ (perf.stdout_lines | map('float') | sum) /  (computes.stdout_lines | length) }} gflops

      Individual node results (gflops):
      {{ dict(computes.stdout_lines | zip(perf.stdout_lines | map('float') )) | to_nice_yaml }}
