- name: Make directory
  file:
    path: "{{ jobdir }}"
    state: directory
    owner: "{{ ansible_user }}"
- name: Get compute memory (in megabytes)
  command: "sinfo --noheader --Format Memory --node {{ computes.stdout_lines[0] }}" # first node
  register: free
- name: Calculate total memory target
  set_fact:
    mem_target: "{{ (free.stdout.strip() | int *  openhpc_tests_hpl_mem_frac) | int }}" # Intel don't tell you but the -b flag appears to be per node or process, not total!
- name: "Calculate process grid (P and Q)"
  hpl:
    num_processes: "{{ computes.stdout_lines | length }}"
  register: pq
- debug:
    msg: "Using P={{ pq.grid.P }} Q={{ pq.grid.Q }} for {{ computes.stdout_lines | length }} processes targeting {{ mem_target }} MB ({{  openhpc_tests_hpl_mem_frac * 100 }}% of each node)"
- name: Create sbatch script
  copy:
    dest: "{{ jobdir }}/hpl-all.sh"
    content: |
      #!/usr/bin/bash

      #SBATCH --ntasks={{ computes.stdout_lines | length }}
      #SBATCH --ntasks-per-node=1
      #SBATCH --output=%x.out
      #SBATCH --error=%x.out
      #SBATCH --exclusive
      {%if openhpc_tests_nodes is defined %}#SBATCH --nodelist={{ openhpc_tests_nodes }}{% endif %}
      
      source  {{ openhpc_tests_intel_pkgs.impi.path }}/mpivars.sh
      source {{ openhpc_tests_intel_pkgs.mkl.path }}/mklvars.sh intel64
      export I_MPI_DEBUG=4 # puts Node name in output
      export UCX_NET_DEVICES={{ openhpc_tests_ucx_net_devices }}
      export I_MPI_PMI_LIBRARY=/lib64/libpmi.so # NB: requires slurm-libpmi-ohpc installed

      cp $MKLROOT/benchmarks/mp_linpack/HPL.dat .
      srun $MKLROOT/benchmarks/mp_linpack/xhpl_intel64_dynamic -m {{ mem_target }} -b {{ openhpc_tests_hpl_NB }} -p {{ pq.grid.P }} -q {{ pq.grid.Q }}

- name: Run hpl-all
  shell: sbatch --wait hpl-all.sh
  become: no
  register:
  args:
    chdir: "{{ jobdir }}"
- name: Check HPL completed OK
  tags: grep2
  shell: "grep '1 tests completed and passed residual checks' hpl-all.sh.out"
  args:
    chdir: "{{ jobdir }}"
  changed_when: false
  register: passed
- name: Extract performance
  tags: grep2
  shell: "grep '^W[R|C]' hpl-all.sh.out"
  args:
    chdir: "{{ jobdir }}"
  changed_when: false
  register: perf
- tags: grep2
  debug:
    msg: |
      Summary for hpl-all:
      total gflops: {{ perf.stdout_lines[0].split()[6] | float }}
